import{j as r}from"./iframe-DM2x38WK.js";import{u as p}from"./RecursicaBundleContext-SETojANv.js";import"./preload-helper-PPVm8Dsz.js";const m=()=>{const{bundle:a}=p(),d=Object.values(a.tokens).filter(e=>"type"in e&&e.type==="GRID").filter(e=>"type"in e&&e.type==="GRID").map(e=>({type:e.type,name:e.name,description:e.description,layouts:e.layouts||[]})).sort((e,t)=>{const s={xs:0,sm:1,md:2,lg:3},i=s[e.name]??999,o=s[t.name]??999;return i-o}),l=e=>{switch(e){case"xs":return 320;case"sm":return 768;case"md":return 1200;case"lg":return 1400;default:return 1200}};return r.jsxs("div",{style:{padding:"2rem",backgroundColor:"#f3f4f6"},children:[r.jsx("div",{style:{marginBottom:"2rem"},children:r.jsx("h2",{children:"Grid Tokens"})}),r.jsx("div",{style:{display:"flex",flexDirection:"column",gap:"3rem"},children:r.jsx("div",{style:{display:"flex",gap:"2rem",flexWrap:"wrap"},children:d.map(e=>{if(!e)return null;const t=l(e.name);return r.jsxs("div",{style:{width:`${t}px`},children:[r.jsx("div",{style:{marginBottom:"0.5rem"},children:r.jsxs("div",{style:{fontSize:"14px",color:"#1f2937"},children:[e.name.toUpperCase()," = ",t,"px"]})}),r.jsx("div",{style:{height:"400px",backgroundColor:"#f9fafb",overflow:"hidden"},children:e.layouts.map((s,i)=>r.jsx("div",{style:{height:"100%",display:"flex",gap:s.gap,alignItems:s.alignment==="stretch"?"stretch":"center",justifyContent:s.alignment==="center"?"center":"flex-start"},children:Array.from({length:s.count},(o,c)=>r.jsx("div",{style:{height:"100%",backgroundColor:"#fecaca",flex:s.alignment==="stretch"?1:"none",width:s.width?`${s.width}px`:"auto"}},c))},i))})]},e.name)})})})]})},j={title:"Tokens/Grid",parameters:{layout:"fullscreen",docs:{description:{story:"Grid tokens defining responsive layout patterns for different viewport sizes, including column counts, gaps, margins, and alignment settings."}}}},n={name:"Grid Tokens",render:()=>r.jsx(m,{}),parameters:{controls:{disable:!0}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`{
  name: "Grid Tokens",
  render: () => <GridTokens />,
  parameters: {
    controls: {
      disable: true
    } // Disable controls to prevent serialization issues
  }
}`,...n.parameters?.docs?.source}}};const v=["GridTokensStory"];export{n as GridTokensStory,v as __namedExportsOrder,j as default};
