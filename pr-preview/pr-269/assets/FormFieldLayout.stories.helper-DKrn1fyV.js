import{j as d,r as y}from"./iframe-DM2x38WK.js";import{u as C,e as F,p as W}from"./UnstyledButton-Buk-25m2.js";import{I as h}from"./Input-EAodAI2a.js";import{L as v,m as x}from"./Label-BU9mzDmU.js";import{E as O}from"./ErrorText-C6lY2QaY.js";function B(e,t,a){const o=C(e,t,a),{label:s,description:p,error:l,required:n,classNames:u,styles:c,className:m,unstyled:f,__staticSelector:b,__stylesApiProps:i,errorProps:_,labelProps:L,descriptionProps:N,wrapperProps:g,id:I,size:q,style:H,inputContainer:T,inputWrapperOrder:E,withAsterisk:$,variant:k,vars:X,mod:R,attributes:V,...D}=o,{styleProps:A,rest:j}=F(D),z={label:s,description:p,error:l,required:n,classNames:u,className:m,__staticSelector:b,__stylesApiProps:i||o,errorProps:_,labelProps:L,descriptionProps:N,unstyled:f,styles:c,size:q,style:H,inputContainer:T,inputWrapperOrder:E,withAsterisk:$,variant:k,id:I,mod:R,attributes:V,...g};return{...j,classNames:u,styles:c,unstyled:f,wrapperProps:{...z,...A},inputProps:{required:n,classNames:u,styles:c,unstyled:f,size:q,__staticSelector:b,__stylesApiProps:i||o,error:l,variant:k,id:I,attributes:V}}}const M={__staticSelector:"InputBase",withAria:!0,size:"sm"},S=W((e,t)=>{const{inputProps:a,wrapperProps:o,...s}=B("InputBase",M,e);return d.jsx(h.Wrapper,{...o,children:d.jsx(h,{...a,...s,ref:t})})});S.classes={...h.classes,...h.Wrapper.classes};S.displayName="@mantine/core/InputBase";var r={root:"ks5ymo0",rootHorizontal:"ks5ymo6",wrapperStacked:"ks5ymo2",descriptionStacked:"ks5ymo3",descriptionStackedWithError:"ks5ymo5",errorStacked:"ks5ymo4",wrapperHorizontal:"ks5ymo8",descriptionHorizontal:"ks5ymo9",descriptionHorizontalWithError:"ks5ymob",errorHorizontal:"ks5ymoa",errorText:"ks5ymoc",descriptionText:"ks5ymod"};try{v.displayName="Label",v.__docgenInfo={description:"",displayName:"Label",props:{Indicator:{defaultValue:null,description:"Defines the required indicator and behavior.  Default is none",name:"Indicator",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"none"'},{value:'"optional"'},{value:'"asterisk / truncate overflow"'},{value:'"asterisk / full label text"'}]}},Show_label:{defaultValue:null,description:"Boolean to show/hide the label",name:"Show_label",required:!1,type:{name:"boolean | undefined"}},Label:{defaultValue:null,description:"Label text.  You can also just use the children prop",name:"Label",required:!1,type:{name:"ReactNode"}},Optional_text:{defaultValue:null,description:"Optional text to display after the label.  Default is (optional)",name:"Optional_text",required:!1,type:{name:"string | undefined"}},Label_placement:{defaultValue:null,description:"The placement of the label relative to the form input component",name:"Label_placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"left"'}]}},Align:{defaultValue:null,description:'Label alignment.  Used only for Label_placement="left".  Default is middle',name:"Align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"middle"'}]}},children:{defaultValue:null,description:"You can use the Label prop or children prop for the label text",name:"children",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:`If true, forces Indicator to be asterisk type with truncate overflow as default
If set, the required asterisk is displayed next to the label`,name:"required",required:!1,type:{name:"boolean | undefined"}},useLabelComponent:{defaultValue:null,description:"If true, renders Input.Label wrapper. If false, renders React fragment (assumes Input.Label already wraps it)",name:"useLabelComponent",required:!1,type:{name:"boolean | undefined"}}}}}catch{}try{x.displayName="mapInputLabelProps",x.__docgenInfo={description:`Pure function that maps LabelProps to Mantine Input.Label props
Handles all the logic for CSS classname mapping and indicator processing`,displayName:"mapInputLabelProps",props:{Indicator:{defaultValue:null,description:"Defines the required indicator and behavior.  Default is none",name:"Indicator",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"none"'},{value:'"optional"'},{value:'"asterisk / truncate overflow"'},{value:'"asterisk / full label text"'}]}},Show_label:{defaultValue:null,description:"Boolean to show/hide the label",name:"Show_label",required:!1,type:{name:"boolean | undefined"}},Label:{defaultValue:null,description:"Label text.  You can also just use the children prop",name:"Label",required:!1,type:{name:"ReactNode"}},Optional_text:{defaultValue:null,description:"Optional text to display after the label.  Default is (optional)",name:"Optional_text",required:!1,type:{name:"string | undefined"}},Label_placement:{defaultValue:null,description:"The placement of the label relative to the form input component",name:"Label_placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"left"'}]}},Align:{defaultValue:null,description:'Label alignment.  Used only for Label_placement="left".  Default is middle',name:"Align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"middle"'}]}},children:{defaultValue:null,description:"You can use the Label prop or children prop for the label text",name:"children",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:`If true, forces Indicator to be asterisk type with truncate overflow as default
If set, the required asterisk is displayed next to the label`,name:"required",required:!1,type:{name:"boolean | undefined"}},useLabelComponent:{defaultValue:null,description:"If true, renders Input.Label wrapper. If false, renders React fragment (assumes Input.Label already wraps it)",name:"useLabelComponent",required:!1,type:{name:"boolean | undefined"}}}}}catch{}const w=y.forwardRef((e,t)=>{const{Text:a}=e;return d.jsx("span",{ref:t,children:a||e.children})});try{w.displayName="HelpText",w.__docgenInfo={description:"",displayName:"HelpText",props:{Text:{defaultValue:null,description:"",name:"Text",required:!1,type:{name:"ReactNode"}},Has_icon:{defaultValue:null,description:"",name:"Has_icon",required:!1,type:{name:"boolean | undefined"}},Icon:{defaultValue:null,description:"",name:"Icon",required:!1,type:{name:"ReactNode"}}}}}catch{}const Y=(e,t,a,o,s,p)=>{const l={label:void 0,labelProps:void 0};if(!t&&!a)return l;const n={Indicator:o,required:s,Show_label:p,Label_placement:e==="Side-by-side"?"left":"top",...a};return l.labelProps=x(n),l.label=d.jsx(v,{useLabelComponent:!1,children:t}),l},U=(e,t)=>{const a={description:void 0,descriptionProps:void 0};return!e&&!t||(a.description=d.jsx(w,{...t,children:e})),a},J=(e,t)=>{const a={error:void 0,errorProps:void 0};return!e&&!t||(a.error=d.jsx(O,{...t,children:e})),a},P=y.forwardRef(({children:e,Layout:t="Stacked",Label:a,LabelProps:o,Help_text:s,Help_textProps:p,Error_text:l,Error_textProps:n,Show_label:u=!0,Indicator:c="none",required:m=!1},f)=>{const b=t==="Side-by-side"?r.rootHorizontal:r.root;if(!y.isValidElement(e))return e;const i=Y(t,a,o,c,m,u),_={Label:void 0,Layout:void 0,LabelProps:void 0,Help_text:void 0,Help_textProps:void 0,Error_text:void 0,Error_textProps:void 0,Show_label:void 0,Indicator:void 0};return y.cloneElement(e,{ref:f,..._,required:m,label:i.label,labelProps:i.labelProps,...U(s,p),...J(l,n),classNames:{root:`${b} ${e.props.classNames?.root||""}`,label:typeof i.labelProps?.classNames=="object"&&i.labelProps?.classNames?.label||"",...t==="Stacked"&&{wrapper:`${r.wrapperStacked} ${e.props.classNames?.wrapper||""}`,description:`${r.descriptionStacked} ${r.descriptionText} ${l||n?r.descriptionStackedWithError:""} ${e.props.classNames?.description||""}`,error:`${r.errorStacked} ${r.errorText} ${e.props.classNames?.error||""}`},...t==="Side-by-side"&&{wrapper:`${r.wrapperHorizontal} ${e.props.classNames?.wrapper||""}`,description:`${r.descriptionHorizontal} ${r.descriptionText} ${l||n?r.descriptionHorizontalWithError:""} ${e.props.classNames?.description||""}`,error:`${r.errorHorizontal} ${r.errorText} ${e.props.classNames?.error||""}`},...e.props.classNames}})});P.displayName="FormFieldLayout";try{P.displayName="FormFieldLayout",P.__docgenInfo={description:"",displayName:"FormFieldLayout",props:{Layout:{defaultValue:{value:"Stacked"},description:"Layout orientation - stacked (top) or side-by-side (left).  Default is stacked",name:"Layout",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"Stacked"'},{value:'"Side-by-side"'}]}},Label:{defaultValue:null,description:"The label component.  This is typically just a string, but if you want to use your own label component, you can",name:"Label",required:!1,type:{name:"ReactNode"}},LabelProps:{defaultValue:null,description:"Props to be passed to the label component if its a custom component",name:"LabelProps",required:!1,type:{name:"(FigmaProps & InputLabelProps & DataAttributes) | undefined"}},required:{defaultValue:{value:"false"},description:"Sets if the field is required.  Passed down to the underlying component",name:"required",required:!1,type:{name:"boolean | undefined"}},disabled:{defaultValue:null,description:"Sets if the field is disabled.  Passed down to the underlying component",name:"disabled",required:!1,type:{name:"boolean | undefined"}},Indicator:{defaultValue:{value:"none"},description:"Optional.  Set to true if field is optional",name:"Indicator",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"none"'},{value:'"optional"'},{value:'"asterisk / truncate overflow"'},{value:'"asterisk / full label text"'}]}},Help_text:{defaultValue:null,description:"Help text to be shown.  Maps to the mantine description prop",name:"Help_text",required:!1,type:{name:"ReactNode"}},Help_textProps:{defaultValue:null,description:"Custom help text component.  If provided, the Help_text prop will be ignored",name:"Help_textProps",required:!1,type:{name:"(HelpTextProps & DataAttributes) | undefined"}},Error_text:{defaultValue:null,description:"Error text to be shown.  Maps to the mantine error prop",name:"Error_text",required:!1,type:{name:"ReactNode"}},Error_textProps:{defaultValue:null,description:"Custom error text component.  If provided, the Error_text prop will be ignored",name:"Error_textProps",required:!1,type:{name:"(ErrorTextProps & DataAttributes) | undefined"}},Show_label:{defaultValue:{value:"true"},description:"Shows/hides the label",name:"Show_label",required:!1,type:{name:"boolean | undefined"}},children:{defaultValue:null,description:"The Mantine form component to wrap (e.g., TextInput, Select, etc.)",name:"children",required:!0,type:{name:"ReactElement<MantineComponentProps, string | JSXElementConstructor<any>>"}}}}}catch{}const te={Layout:{control:"select",options:["Stacked","Side-by-side"],description:"Layout orientation - Stacked (single column) or Side-by-side (2 columns with 248px label area)",defaultValue:"Stacked"},required:{control:"boolean",description:"Whether the field is required",defaultValue:!1},disabled:{control:"boolean",description:"Whether the field is disabled",defaultValue:!1},Help_text:{control:"text",description:"Help text to display below the input",defaultValue:"This is the help text"},Error_text:{control:"text",description:"Error text to display below the input.  If not set, the description will be shown",defaultValue:""},Show_label:{control:"boolean",description:"Whether to show the label.  IT will be hidden, but still be in the DOM",defaultValue:!0},Indicator:{control:"select",options:["none","optional","asterisk / truncate overflow","asterisk / full label text"],description:"Indicator to display next to the label",defaultValue:"none"},children:{table:{disable:!0}},LabelProps:{table:{disable:!0}},Help_textProps:{table:{disable:!0}},Error_textProps:{table:{disable:!0}}};export{P as F,S as I,te as f};
