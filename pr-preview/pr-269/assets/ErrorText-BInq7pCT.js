import{r as c,j as e}from"./iframe-B9Jd1eqC.js";import{I as u}from"./Input-Cx8ZZ3YI.js";var p={root:"_170o1vd0"};const r=c.forwardRef((t,n)=>{const{Text:a,Has_icon:i,Icon:s,useInputError:d=!1,children:l}=t,o=e.jsxs(e.Fragment,{children:[i&&s,a||l]});return d?e.jsx(u.Error,{ref:n,className:p.root,children:o}):o});r.displayName="ErrorText";try{r.displayName="ErrorText",r.__docgenInfo={description:"",displayName:"ErrorText",props:{Text:{defaultValue:null,description:"Text to display. It can also be the children prop",name:"Text",required:!1,type:{name:"ReactNode"}},Has_icon:{defaultValue:null,description:"Set to true if an icon is specified.  This is redundant with just providing an Icon prop.",name:"Has_icon",required:!1,type:{name:"boolean | undefined"}},Icon:{defaultValue:null,description:"The icon to show next to the error text",name:"Icon",required:!1,type:{name:"ReactNode"}},useInputError:{defaultValue:null,description:"Set to true if the error text should be used as an input error.",name:"useInputError",required:!1,type:{name:"boolean | undefined"}},children:{defaultValue:null,description:"The content to display. This will override the Text prop.",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}export{r as E};
