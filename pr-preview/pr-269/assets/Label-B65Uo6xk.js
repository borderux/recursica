import{r as f,j as a}from"./iframe-Bam2g8_D.js";import{I as m}from"./Input-D-4aUrER.js";var b="dv3p661",h="dv3p662",v="dv3p663",L="dv3p664",y="dv3p665",_="dv3p666",q="dv3p667",x="dv3p668";const u=e=>{const{Indicator:l="none",Show_label:n=!0,Optional_text:r="(optional)",Label_placement:i="top",Label:I,children:g,Align:d="middle",...o}=e,t=e.required?l==="asterisk / full label text"?"asterisk / full label text":"asterisk / truncate overflow":l,p=t==="optional"?h:t.includes("asterisk")?v:L,c=`${i==="left"?y:""} ${i==="left"?d==="top"?q:_:""} ${t==="asterisk / truncate overflow"&&i==="left"?x:""} ${p} ${n?"":b}`.trim();return{...o,required:t.includes("asterisk")||e.required,classNames:{...typeof o.classNames=="object"?o.classNames:{},label:c}}};try{u.displayName="mapInputLabelProps",u.__docgenInfo={description:`Pure function that maps LabelProps to Mantine Input.Label props
Handles all the logic for CSS classname mapping and indicator processing`,displayName:"mapInputLabelProps",props:{Indicator:{defaultValue:null,description:"Defines the required indicator and behavior.  Default is none",name:"Indicator",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"none"'},{value:'"optional"'},{value:'"asterisk / truncate overflow"'},{value:'"asterisk / full label text"'}]}},Show_label:{defaultValue:null,description:"Boolean to show/hide the label",name:"Show_label",required:!1,type:{name:"boolean | undefined"}},Label:{defaultValue:null,description:"Label text.  You can also just use the children prop",name:"Label",required:!1,type:{name:"ReactNode"}},Optional_text:{defaultValue:null,description:"Optional text to display after the label.  Default is (optional)",name:"Optional_text",required:!1,type:{name:"string | undefined"}},Label_placement:{defaultValue:null,description:"The placement of the label relative to the form input component",name:"Label_placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"left"'}]}},Align:{defaultValue:null,description:'Label alignment.  Used only for Label_placement="left".  Default is middle',name:"Align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"middle"'}]}},children:{defaultValue:null,description:"You can use the Label prop or children prop for the label text",name:"children",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:`If true, forces Indicator to be asterisk type with truncate overflow as default
If set, the required asterisk is displayed next to the label`,name:"required",required:!1,type:{name:"boolean | undefined"}},useLabelComponent:{defaultValue:null,description:"If true, renders Input.Label wrapper. If false, renders React fragment (assumes Input.Label already wraps it)",name:"useLabelComponent",required:!1,type:{name:"boolean | undefined"}}}}}catch{}const s=f.forwardRef((e,l)=>{const n=u(e),r=a.jsxs(a.Fragment,{children:[a.jsx("span",{"data-label-text":!0,children:e.Label||e.children}),a.jsx("span",{"data-optional-text":!0,"aria-hidden":"true",children:e.Optional_text||"(optional)"})]});return e.useLabelComponent?a.jsx(m.Label,{...n,ref:l,children:r}):r});try{s.displayName="Label",s.__docgenInfo={description:"",displayName:"Label",props:{Indicator:{defaultValue:null,description:"Defines the required indicator and behavior.  Default is none",name:"Indicator",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"none"'},{value:'"optional"'},{value:'"asterisk / truncate overflow"'},{value:'"asterisk / full label text"'}]}},Show_label:{defaultValue:null,description:"Boolean to show/hide the label",name:"Show_label",required:!1,type:{name:"boolean | undefined"}},Label:{defaultValue:null,description:"Label text.  You can also just use the children prop",name:"Label",required:!1,type:{name:"ReactNode"}},Optional_text:{defaultValue:null,description:"Optional text to display after the label.  Default is (optional)",name:"Optional_text",required:!1,type:{name:"string | undefined"}},Label_placement:{defaultValue:null,description:"The placement of the label relative to the form input component",name:"Label_placement",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"left"'}]}},Align:{defaultValue:null,description:'Label alignment.  Used only for Label_placement="left".  Default is middle',name:"Align",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"top"'},{value:'"middle"'}]}},children:{defaultValue:null,description:"You can use the Label prop or children prop for the label text",name:"children",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:`If true, forces Indicator to be asterisk type with truncate overflow as default
If set, the required asterisk is displayed next to the label`,name:"required",required:!1,type:{name:"boolean | undefined"}},useLabelComponent:{defaultValue:null,description:"If true, renders Input.Label wrapper. If false, renders React fragment (assumes Input.Label already wraps it)",name:"useLabelComponent",required:!1,type:{name:"boolean | undefined"}}}}}catch{}export{s as L,u as m};
