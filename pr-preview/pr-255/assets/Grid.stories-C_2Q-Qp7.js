import{R as e,y as n,C as c,m as s}from"./iframe-DxqqKa_S.js";import{T as p}from"./TokenManager-DgRwnXUu.js";import"./preload-helper-PPVm8Dsz.js";const d=p.getInstance(),g=d.getSortedGridBreakpoints(),u=()=>{const i=t=>{switch(t){case"xs":return 320;case"sm":return 768;case"md":return 1200;case"lg":return 1400;default:return 1200}};return e.createElement(n,{p:"size/spacer/2x",bg:"color/gray/100"},e.createElement(n,{mb:"size/spacer/2x"},e.createElement(c,{variant:"h2"},"Grid Tokens")),e.createElement(s,{direction:"column",gap:"size/spacer/3x"},e.createElement(s,{gap:"size/spacer/2x",wrap:"wrap"},g.map(t=>{if(!t)return null;const o=i(t.name);return e.createElement(n,{key:t.name,style:{width:`${o}px`}},e.createElement(n,{mb:"size/spacer/0-5x"},e.createElement(c,{variant:"body-2/normal",color:"color/gray/800"},t.name.toUpperCase()," = ",o,"px")),e.createElement(n,{h:400,bg:"color/gray/050",style:{overflow:"hidden"}},t.layouts.map((r,m)=>e.createElement(s,{key:m,h:"100%",gap:r.gap,style:{alignItems:r.alignment.toLowerCase()==="stretch"?"stretch":"center",justifyContent:r.alignment.toLowerCase()==="center"?"center":"flex-start"}},Array.from({length:r.count},(h,l)=>e.createElement(n,{key:l,h:"100%",bg:"color/salmon/50",style:{flex:r.alignment.toLowerCase()==="stretch"?1:"none",width:r.width?`${r.width}px`:"auto"}}))))))}))))},x={title:"Tokens/Grid",component:u,parameters:{layout:"fullscreen",docs:{description:{story:"Grid tokens defining responsive layout patterns for different viewport sizes, including column counts, gaps, margins, and alignment settings."}}}},a={name:"Grid"};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:`{
  name: "Grid"
}`,...a.parameters?.docs?.source}}};const E=["GridTokensStory"];export{a as GridTokensStory,E as __namedExportsOrder,x as default};
