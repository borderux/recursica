# This workflow runs checks on pull requests to ensure code quality and prevent regressions.
name: Pull Request Check

on:
  # This action triggers on pull requests targeting the main branch.
  pull_request:
    branches: [main]

jobs:
  check-pull-request:
    # Don't run on changeset-release branches
    if: ${{ !startsWith(github.head_ref, 'changeset-release') }}
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout
        uses: actions/checkout@v4

      # Sets up a specific version of Node.js.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      # Installs project dependencies using a clean install from package-lock.json.
      - name: Install dependencies
        run: npm ci
        env:
          # This prevents husky from installing git hooks during the CI process
          HUSKY: 0

      - name: Cache turbo files
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.ref_name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ github.ref_name }}-
            ${{ runner.os }}-turbo-

      # Runs TypeScript type checking.
      - name: Check types
        run: npm run check-types

      # Builds the project.
      - name: Build
        run: |
          echo "üîç COMPREHENSIVE CI DEBUGGING (PR)"
          echo "=================================="
          echo ""
          echo "1. All environment variables (filtered for VITE_ and CI):"
          env | grep -E "^(VITE_|CI)" | sort
          echo ""
          echo "2. Specific environment variables we care about:"
          echo "  VITE_RECURSICA_API_URL: '$VITE_RECURSICA_API_URL'"
          echo "  VITE_RECURSICA_UI_URL: '$VITE_RECURSICA_UI_URL'"
          echo "  VITE_PLUGIN_PHRASE: '$VITE_PLUGIN_PHRASE'"
          echo "  VITE_RECURSICA_API_TEST: '$VITE_RECURSICA_API_TEST'"
          echo "  VITE_PLUGIN_PHRASE_TEST: '$VITE_PLUGIN_PHRASE_TEST'"
          echo "  CI: '$CI'"
          echo "  NODE_ENV: '$NODE_ENV'"
          echo ""
          echo "3. Checking for .env files in figma-plugin directory:"
          ls -la apps/figma-plugin/.env* 2>/dev/null || echo "  No .env files found"
          echo ""
          echo "4. Contents of any .env files found:"
          if [ -f "apps/figma-plugin/.env" ]; then
            echo "  apps/figma-plugin/.env:"
            cat apps/figma-plugin/.env | sed 's/^/    /'
          fi
          if [ -f "apps/figma-plugin/.env.local" ]; then
            echo "  apps/figma-plugin/.env.local:"
            cat apps/figma-plugin/.env.local | sed 's/^/    /'
          fi
          if [ -f "apps/figma-plugin/.env.production" ]; then
            echo "  apps/figma-plugin/.env.production:"
            cat apps/figma-plugin/.env.production | sed 's/^/    /'
          fi
          echo ""
          echo "5. Clearing caches and running build with detailed logging:"
          echo "  Clearing Turbo cache..."
          npx turbo daemon stop || true
          rm -rf .turbo || true
          echo "  Clearing node_modules/.cache..."
          find . -name ".cache" -type d -exec rm -rf {} + 2>/dev/null || true
          echo "  Running build..."
          npm run build
          echo ""
          echo "6. Checking figma-plugin build output:"
          if [ -f "apps/figma-plugin/dist/index.html" ]; then
            echo "  ‚úÖ index.html exists"
            echo "  URLs found in index.html:"
            grep -o "https://[^\"]*recursica[^\"]*" apps/figma-plugin/dist/index.html | sort | uniq || echo "  No recursica URLs found in index.html"
          else
            echo "  ‚ùå index.html not found"
          fi
          if [ -f "apps/figma-plugin/dist/figma-plugin.js" ]; then
            echo "  ‚úÖ figma-plugin.js exists"
            echo "  URLs found in figma-plugin.js:"
            grep -o "https://[^\"]*recursica[^\"]*" apps/figma-plugin/dist/figma-plugin.js | sort | uniq || echo "  No recursica URLs found in figma-plugin.js"
          else
            echo "  ‚ùå figma-plugin.js not found"
          fi
          echo ""
          echo "7. Checking for any remaining .env files after build:"
          find . -name ".env*" -type f | head -10
          echo ""
          echo "8. Node.js and npm versions:"
          node --version
          npm --version
          echo ""
          echo "9. Current working directory and file structure:"
          pwd
          ls -la apps/figma-plugin/ | head -10
        env:
          # Production environment variables (for main plugin)
          VITE_RECURSICA_API_URL: ${{ vars.RECURSICA_API }}
          VITE_RECURSICA_UI_URL: https://app.recursica.com
          VITE_PLUGIN_PHRASE: ${{ secrets.PLUGIN_PHRASE }}
          # Test environment variables (for test plugin)
          VITE_RECURSICA_API_TEST: ${{ vars.RECURSICA_API_TEST }}
          VITE_PLUGIN_PHRASE_TEST: ${{ secrets.PLUGIN_PHRASE_TEST }}

      # Runs the test suite.
      - name: Test
        run: npm run test
